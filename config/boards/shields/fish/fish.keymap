// キーの入力をカスタマイズする

// 定義を呼んでくる
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// タップ・ホールド複合キーの挙動を調整できる
&mt {
    tapping-term-ms = <175>;
    flavor = "tap-preferred";
};
&lt {
    tapping-term-ms = <175>;
    flavor = "balanced";
};

/ {
    // 複数キーの同時押しに特別の入力を設定できる
    // キー番号早見表：
    //       0  1  2  3     4  5  6  7
    // 8  9 10 11 12 13    14 15 16 17 18 19
    //   20 21 22 23          24 25 26 27
    //            28 29    30 31
    combos{

        compatible = "zmk,combos";
        timeout-ms = <200>;
        
        combo_left_thumb {
            key-positions = <10 11>;
            bindings = <&kp LANG2>;
        };

        combo_right_thumb {
            key-positions = <16 17>;
            bindings = <&kp LANG1>;
        };
    };
    
    // キーの割り当てをカスタマイズする
    // 型（&...）は https://zmk.dev/docs/behaviors/... を参照
    // キーコードは https://zmk.dev/docs/codes/... を参照
    keymap {

        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
                        &kp L       &kp U       &kp F       &kp COMMA           &kp K       &kp W       &kp R       &kp Y
&kp Q       &kp E       &mt LCTRL I &mt LALT A  &mt LSHFT O &kp MINUS           &kp G       &mt RSHFT T &mt RALT N  &mt RCTRL S &kp H       &kp P
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp J       &kp B
                                                &lt 1 BSPC  &mt LGUI ENTER     &mt RGUI TAB &lt 2 SPACE
            >;
        };

        layer_1 {
            bindings = <
                        &kp N0      &kp N9      &kp N8      &kp DOT             &kp DOLLAR  &kp LT      &kp EQUAL   &kp GT
&kp CARET   &kp N4     &mt LCTRL N3 &mt LALT N2 &mt LSHFT N1 &trans            &kp TILDE &mt RSHFT PLUS &mt RALT MINUS &mt RCTRL ASTRK &kp SLASH &kp PERCENT
            &kp UNDER   &kp N7      &kp N6      &kp N5                                      &kp EXCL    &kp QMARK   &kp SEMI    &kp COLON
                                                &none       &trans              &trans      &lt 3 SPACE 
            >;
        };

        layer_2 {
            bindings = <
                        &kp LBKT    &kp DQT     &kp RBKT    &kp AMPS           &kp C_BRI_UP &kp ESC     &kp UP      &kp CAPS
&kp AT      &kp HASH &mt LCTRL LPAR &mt LALT SQT &mt LSHFT RPAR &kp PIPE    &kp C_BRI_DN &mt RSHFT LEFT &mt RALT DOWN &mt RCTRL RIGHT &kp C_VOL_UP &kp C_POWER
            &kp BSLH    &kp LBRC    &kp GRAVE   &kp RBRC                                    &kp C_PREV  &kp C_PP    &kp C_NEXT &kp C_VOL_DN
                                                &lt 3 BSPC  &trans              &trans      &none
            >;
        };

        layer_3 {
            bindings = <
                       &out OUT_USB &out OUT_BLE &none      &none               &none       &none       &none       &none
&bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &bt BT_CLR     &none       &none       &none       &none       &none       &none
            &none       &none       &none       &none                                       &none       &none       &none       &none
                                                &none       &none               &none       &none
            >;
        };
    };
};
